{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HAKYOL\\\\nfrontend\\\\src\\\\pages\\\\LoginPage.js\";\nimport Input from \"../components/Input\";\nimport { withTranslation } from \"react-i18next\";\nimport ButtonWithProgress from \"../components/ButtonWithProgress\";\nimport { withApiProgress } from \"../shared/ApiProgress\";\nimport { connect } from 'react-redux';\nimport { loginHandler } from \"../redux/authActions\";\n// import { Authentication } from \"../shared/AuthenticationContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = props => {\n  // static contextType = Authentication;\n  // state = {\n  //   username: null,\n  //   password: null,\n  //   error: null,\n  //   pendingApiCall: false\n  // };\n\n  const onChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value,\n      error: null\n    });\n  };\n\n  // onClickLogin = (event) => {\n  //   event.preventDefault();\n  //   const creds = {\n  //     username: this.state.username,\n  //     password: this.state.password,\n  //   };\n  //   login(creds);\n  // };\n\n  const onClickLogin = async event => {\n    event.preventDefault();\n    // const { username, password } = this.state;\n    const creds = {\n      username,\n      password\n    };\n    const {\n      history,\n      dispatch\n    } = props;\n    const {\n      push\n    } = history;\n    this.setState({\n      error: null\n    });\n    try {\n      await dispatch(loginHandler(creds));\n      push('/');\n    } catch (apiError) {\n      console.log(apiError);\n      // this.setState({\n      //   error: apiError.response.data.message\n      // });\n    }\n  };\n\n  const {\n    t,\n    pendingApiCall\n  } = props;\n  const {\n    username,\n    password,\n    error\n  } = undefined;\n  const buttonEnabled = username && password;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: t(\"Login\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: t(\"Username\"),\n        name: \"username\",\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: t(\"Password\"),\n        name: \"password\",\n        type: \"password\",\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: [\" \", error, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(ButtonWithProgress, {\n          onClick: onClickLogin,\n          disabled: !buttonEnabled || pendingApiCall,\n          pendingApiCall: pendingApiCall,\n          text: t('Login')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_c = LoginPage;\nconst LoginPageWithTranslation = withTranslation()(LoginPage);\nexport default connect()(withApiProgress(LoginPageWithTranslation));\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["Input","withTranslation","ButtonWithProgress","withApiProgress","connect","loginHandler","jsxDEV","_jsxDEV","LoginPage","props","onChange","event","name","value","target","setState","error","onClickLogin","preventDefault","creds","username","password","history","dispatch","push","apiError","console","log","t","pendingApiCall","undefined","buttonEnabled","className","children","fileName","_jsxFileName","lineNumber","columnNumber","label","type","onClick","disabled","text","_c","LoginPageWithTranslation","$RefreshReg$"],"sources":["C:/Users/HAKYOL/nfrontend/src/pages/LoginPage.js"],"sourcesContent":["import Input from \"../components/Input\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport ButtonWithProgress from \"../components/ButtonWithProgress\";\r\nimport { withApiProgress } from \"../shared/ApiProgress\";\r\nimport { connect } from 'react-redux';\r\nimport { loginHandler } from \"../redux/authActions\";\r\n// import { Authentication } from \"../shared/AuthenticationContext\";\r\n\r\nconst LoginPage = (props) => {\r\n  // static contextType = Authentication;\r\n  // state = {\r\n  //   username: null,\r\n  //   password: null,\r\n  //   error: null,\r\n  //   pendingApiCall: false\r\n  // };\r\n\r\n  const onChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n      error: null\r\n    });\r\n  };\r\n\r\n  // onClickLogin = (event) => {\r\n  //   event.preventDefault();\r\n  //   const creds = {\r\n  //     username: this.state.username,\r\n  //     password: this.state.password,\r\n  //   };\r\n  //   login(creds);\r\n  // };\r\n\r\n  const onClickLogin = async event => {\r\n    event.preventDefault();\r\n    // const { username, password } = this.state;\r\n    const creds = {\r\n      username,\r\n      password\r\n    };\r\n\r\n    const { history, dispatch } = props;\r\n    const { push } = history;\r\n\r\n    this.setState({\r\n      error: null\r\n    });\r\n    try {\r\n      await dispatch(loginHandler(creds));\r\n      push('/');\r\n    } catch (apiError) {\r\n      console.log(apiError)\r\n      // this.setState({\r\n      //   error: apiError.response.data.message\r\n      // });\r\n    }\r\n  };\r\n  const { t, pendingApiCall } = props;\r\n  const { username, password, error } = undefined;\r\n\r\n  const buttonEnabled = username && password;\r\n  return (\r\n    <div className=\"container\">\r\n      <form>\r\n        <h1 className=\"text-center\">{t(\"Login\")}</h1>\r\n        <Input label={t(\"Username\")} name=\"username\" onChange={onChange} ></Input>\r\n        <Input label={t(\"Password\")} name=\"password\" type=\"password\" onChange={onChange} ></Input>\r\n        {error && <div className=\"alert alert-danger\"> {error} </div>}\r\n        <div className=\"text-center\">\r\n          <ButtonWithProgress\r\n            onClick={onClickLogin}\r\n            disabled={!buttonEnabled || pendingApiCall}\r\n            pendingApiCall={pendingApiCall}\r\n            text={t('Login')} />\r\n          {/* <button className=\"btn btn-primary\" onClick={this.onClickLogin} disabled={!buttonEnabled || pendingApiCall}>{t(\"Login\")}</button> */}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst LoginPageWithTranslation = withTranslation()(LoginPage);\r\n\r\nexport default connect()(withApiProgress(LoginPageWithTranslation));\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}