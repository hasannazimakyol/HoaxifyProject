{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HAKYOL\\\\nfrontend\\\\src\\\\shared\\\\ApiProgress.js\",\n  _s = $RefreshSig$();\nimport React, { Component, useEffect, useState } from 'react'; //rcc\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const useApiProgress = apiPath => {\n  _s();\n  const [pendingApiCall, setPendingApiCall] = useState(false);\n  useEffect(() => {\n    let requestInterceptor, responseInterceptor;\n    const updateApiCallFor = (url, inProgress) => {\n      if (url === apiPath) {\n        setPendingApiCall(inProgress);\n      }\n    };\n    const registerInterceptors = () => {\n      requestInterceptor = axios.interceptors.request.use(request => {\n        // if (request.url === this.props.path) {\n        //     this.setState({ pendingApiCall: true });\n        // }\n        //console('running request intercepter', apiPath);\n        updateApiCallFor(request.url, true);\n        return request;\n      });\n      responseInterceptor = axios.interceptors.response.use(response => {\n        updateApiCallFor(response.url, false);\n        return response;\n      }, error => {\n        updateApiCallFor(error.url, false);\n        throw error;\n      });\n    };\n    const unregisterInterceptors = () => {\n      axios.interceptors.request.eject(requestInterceptor);\n      axios.interceptors.response.eject(responseInterceptor);\n    };\n    registerInterceptors();\n  });\n  return pendingApiCall;\n};\n_s(useApiProgress, \"dxeikoFXtsTGpF/7CQdkmajlavs=\");\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\nexport function withApiProgress(WrappedComponent, apiPath) {\n  var _class;\n  return _class = class extends Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        pendingApiCall: false\n      };\n    }\n    componentDidMount() {\n      this.registerInterceptors();\n    }\n    componentWillUnmount() {\n      this.unregisterInterceptors();\n    }\n    render() {\n      const {\n        pendingApiCall\n      } = this.state.pendingApiCall;\n      // return (<div>{React.cloneElement(this.props.children, {pendingApiCall: pendingApiCall})}</div>);\n      return /*#__PURE__*/_jsxDEV(WrappedComponent, {\n        ...this.props,\n        pendingApiCall: pendingApiCall\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 20\n      }, this);\n    }\n  }, _class.displayName = `ApiProgress(${getDisplayName(WrappedComponent)})`, _class;\n}","map":{"version":3,"names":["React","Component","useEffect","useState","axios","jsxDEV","_jsxDEV","useApiProgress","apiPath","_s","pendingApiCall","setPendingApiCall","requestInterceptor","responseInterceptor","updateApiCallFor","url","inProgress","registerInterceptors","interceptors","request","use","response","error","unregisterInterceptors","eject","getDisplayName","WrappedComponent","displayName","name","withApiProgress","_class","constructor","args","state","componentDidMount","componentWillUnmount","render","props","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/HAKYOL/nfrontend/src/shared/ApiProgress.js"],"sourcesContent":["import React, { Component, useEffect, useState } from 'react'; //rcc\r\nimport axios from \"axios\";\r\n\r\nexport const useApiProgress = (apiPath) => {\r\n    const[pendingApiCall, setPendingApiCall] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let requestInterceptor, responseInterceptor;\r\n        const updateApiCallFor = (url, inProgress) => {\r\n            if (url === apiPath) {\r\n                setPendingApiCall(inProgress);\r\n            }\r\n        }\r\n        const registerInterceptors = () => {\r\n            requestInterceptor = axios.interceptors.request.use((request) => {\r\n                // if (request.url === this.props.path) {\r\n                //     this.setState({ pendingApiCall: true });\r\n                // }\r\n                //console('running request intercepter', apiPath);\r\n                updateApiCallFor(request.url, true);\r\n                return request;\r\n            });\r\n\r\n            responseInterceptor = axios.interceptors.response.use((response) => {\r\n                updateApiCallFor(response.url, false);\r\n                return response;\r\n            }, (error) => {\r\n                updateApiCallFor(error.url, false);\r\n                throw error;\r\n            });\r\n        };\r\n\r\n        const unregisterInterceptors = () => {\r\n            axios.interceptors.request.eject(requestInterceptor);\r\n            axios.interceptors.response.eject(responseInterceptor);\r\n        }\r\n\r\n        registerInterceptors();\r\n    });\r\n\r\n    return pendingApiCall;\r\n}\r\n\r\nfunction getDisplayName(WrappedComponent) {\r\n    return WrappedComponent.displayName || WrappedComponent.name || 'Component';\r\n}\r\n\r\nexport function withApiProgress(WrappedComponent, apiPath) {\r\n    return class extends Component {\r\n\r\n        // static displayName = 'ApiProgress(' + getDisplayName(WrappedComponent) + ')';\r\n        static displayName = `ApiProgress(${getDisplayName(WrappedComponent)})`;\r\n\r\n        state = {\r\n            pendingApiCall: false\r\n        }\r\n\r\n        componentDidMount() {\r\n            this.registerInterceptors();\r\n        };\r\n\r\n        componentWillUnmount() {\r\n            this.unregisterInterceptors();\r\n        };\r\n\r\n        \r\n\r\n        \r\n        \r\n\r\n        render() {\r\n            const { pendingApiCall } = this.state.pendingApiCall\r\n            // return (<div>{React.cloneElement(this.props.children, {pendingApiCall: pendingApiCall})}</div>);\r\n            return <WrappedComponent {...this.props} pendingApiCall={pendingApiCall} />\r\n        }\r\n    }\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO,CAAC,CAAC;AAC/D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,cAAc,GAAIC,OAAO,IAAK;EAAAC,EAAA;EACvC,MAAK,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE1DD,SAAS,CAAC,MAAM;IACZ,IAAIU,kBAAkB,EAAEC,mBAAmB;IAC3C,MAAMC,gBAAgB,GAAGA,CAACC,GAAG,EAAEC,UAAU,KAAK;MAC1C,IAAID,GAAG,KAAKP,OAAO,EAAE;QACjBG,iBAAiB,CAACK,UAAU,CAAC;MACjC;IACJ,CAAC;IACD,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;MAC/BL,kBAAkB,GAAGR,KAAK,CAACc,YAAY,CAACC,OAAO,CAACC,GAAG,CAAED,OAAO,IAAK;QAC7D;QACA;QACA;QACA;QACAL,gBAAgB,CAACK,OAAO,CAACJ,GAAG,EAAE,IAAI,CAAC;QACnC,OAAOI,OAAO;MAClB,CAAC,CAAC;MAEFN,mBAAmB,GAAGT,KAAK,CAACc,YAAY,CAACG,QAAQ,CAACD,GAAG,CAAEC,QAAQ,IAAK;QAChEP,gBAAgB,CAACO,QAAQ,CAACN,GAAG,EAAE,KAAK,CAAC;QACrC,OAAOM,QAAQ;MACnB,CAAC,EAAGC,KAAK,IAAK;QACVR,gBAAgB,CAACQ,KAAK,CAACP,GAAG,EAAE,KAAK,CAAC;QAClC,MAAMO,KAAK;MACf,CAAC,CAAC;IACN,CAAC;IAED,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;MACjCnB,KAAK,CAACc,YAAY,CAACC,OAAO,CAACK,KAAK,CAACZ,kBAAkB,CAAC;MACpDR,KAAK,CAACc,YAAY,CAACG,QAAQ,CAACG,KAAK,CAACX,mBAAmB,CAAC;IAC1D,CAAC;IAEDI,oBAAoB,CAAC,CAAC;EAC1B,CAAC,CAAC;EAEF,OAAOP,cAAc;AACzB,CAAC;AAAAD,EAAA,CAtCYF,cAAc;AAwC3B,SAASkB,cAAcA,CAACC,gBAAgB,EAAE;EACtC,OAAOA,gBAAgB,CAACC,WAAW,IAAID,gBAAgB,CAACE,IAAI,IAAI,WAAW;AAC/E;AAEA,OAAO,SAASC,eAAeA,CAACH,gBAAgB,EAAElB,OAAO,EAAE;EAAA,IAAAsB,MAAA;EACvD,OAAAA,MAAA,GAAO,cAAc7B,SAAS,CAAC;IAAA8B,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAA,KAK3BC,KAAK,GAAG;QACJvB,cAAc,EAAE;MACpB,CAAC;IAAA;IAEDwB,iBAAiBA,CAAA,EAAG;MAChB,IAAI,CAACjB,oBAAoB,CAAC,CAAC;IAC/B;IAEAkB,oBAAoBA,CAAA,EAAG;MACnB,IAAI,CAACZ,sBAAsB,CAAC,CAAC;IACjC;IAOAa,MAAMA,CAAA,EAAG;MACL,MAAM;QAAE1B;MAAe,CAAC,GAAG,IAAI,CAACuB,KAAK,CAACvB,cAAc;MACpD;MACA,oBAAOJ,OAAA,CAACoB,gBAAgB;QAAA,GAAK,IAAI,CAACW,KAAK;QAAE3B,cAAc,EAAEA;MAAe;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAC/E;EACJ,CAAC,EAAAX,MAAA,CAxBUH,WAAW,GAAI,eAAcF,cAAc,CAACC,gBAAgB,CAAE,GAAE,EAAAI,MAAA;AAyB/E"},"metadata":{},"sourceType":"module","externalDependencies":[]}