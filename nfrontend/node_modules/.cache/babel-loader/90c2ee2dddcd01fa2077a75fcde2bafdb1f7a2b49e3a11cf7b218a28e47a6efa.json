{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react'; //rcc\nimport axios from \"axios\";\nexport const useApiProgress = apiPath => {\n  _s();\n  const [pendingApiCall, setPendingApiCall] = useState(false);\n  useEffect(() => {\n    let requestInterceptor, responseInterceptor;\n    const updateApiCallFor = (url, inProgress) => {\n      if (url === apiPath) {\n        setPendingApiCall(inProgress);\n      }\n    };\n    const registerInterceptors = () => {\n      requestInterceptor = axios.interceptors.request.use(request => {\n        // if (request.url === this.props.path) {\n        //     this.setState({ pendingApiCall: true });\n        // }\n        //console('running request intercepter', apiPath);\n        updateApiCallFor(request.url, true);\n        return request;\n      });\n      responseInterceptor = axios.interceptors.response.use(response => {\n        updateApiCallFor(response.url, false);\n        return response;\n      }, error => {\n        updateApiCallFor(error.response.data.path, false);\n        throw error;\n      });\n    };\n    const unregisterInterceptors = () => {\n      axios.interceptors.request.eject(requestInterceptor);\n      axios.interceptors.response.eject(responseInterceptor);\n    };\n    registerInterceptors();\n    return function unmount() {\n      unregisterInterceptors();\n    };\n  });\n  return pendingApiCall;\n};\n_s(useApiProgress, \"dxeikoFXtsTGpF/7CQdkmajlavs=\");","map":{"version":3,"names":["useEffect","useState","axios","useApiProgress","apiPath","_s","pendingApiCall","setPendingApiCall","requestInterceptor","responseInterceptor","updateApiCallFor","url","inProgress","registerInterceptors","interceptors","request","use","response","error","data","path","unregisterInterceptors","eject","unmount"],"sources":["C:/Users/HAKYOL/nfrontend/src/shared/ApiProgress.js"],"sourcesContent":["import { useEffect, useState } from 'react'; //rcc\r\nimport axios from \"axios\";\r\n\r\nexport const useApiProgress = (apiPath) => {\r\n    const [pendingApiCall, setPendingApiCall] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let requestInterceptor, responseInterceptor;\r\n        const updateApiCallFor = (url, inProgress) => {\r\n            if (url === apiPath) {\r\n                setPendingApiCall(inProgress);\r\n            }\r\n        }\r\n        const registerInterceptors = () => {\r\n            requestInterceptor = axios.interceptors.request.use((request) => {\r\n                // if (request.url === this.props.path) {\r\n                //     this.setState({ pendingApiCall: true });\r\n                // }\r\n                //console('running request intercepter', apiPath);\r\n                updateApiCallFor(request.url, true);\r\n                return request;\r\n            });\r\n\r\n            responseInterceptor = axios.interceptors.response.use((response) => {\r\n                updateApiCallFor(response.url, false);\r\n                return response;\r\n            }, (error) => {\r\n                updateApiCallFor(error.response.data.path, false);\r\n                throw error;\r\n            });\r\n        };\r\n        const unregisterInterceptors = () => {\r\n            axios.interceptors.request.eject(requestInterceptor);\r\n            axios.interceptors.response.eject(responseInterceptor);\r\n        }\r\n        registerInterceptors();\r\n        return function unmount() {\r\n            unregisterInterceptors();\r\n        }\r\n    });\r\n    return pendingApiCall;\r\n};"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO,CAAC,CAAC;AAC7C,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,cAAc,GAAIC,OAAO,IAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAE3DD,SAAS,CAAC,MAAM;IACZ,IAAIQ,kBAAkB,EAAEC,mBAAmB;IAC3C,MAAMC,gBAAgB,GAAGA,CAACC,GAAG,EAAEC,UAAU,KAAK;MAC1C,IAAID,GAAG,KAAKP,OAAO,EAAE;QACjBG,iBAAiB,CAACK,UAAU,CAAC;MACjC;IACJ,CAAC;IACD,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;MAC/BL,kBAAkB,GAAGN,KAAK,CAACY,YAAY,CAACC,OAAO,CAACC,GAAG,CAAED,OAAO,IAAK;QAC7D;QACA;QACA;QACA;QACAL,gBAAgB,CAACK,OAAO,CAACJ,GAAG,EAAE,IAAI,CAAC;QACnC,OAAOI,OAAO;MAClB,CAAC,CAAC;MAEFN,mBAAmB,GAAGP,KAAK,CAACY,YAAY,CAACG,QAAQ,CAACD,GAAG,CAAEC,QAAQ,IAAK;QAChEP,gBAAgB,CAACO,QAAQ,CAACN,GAAG,EAAE,KAAK,CAAC;QACrC,OAAOM,QAAQ;MACnB,CAAC,EAAGC,KAAK,IAAK;QACVR,gBAAgB,CAACQ,KAAK,CAACD,QAAQ,CAACE,IAAI,CAACC,IAAI,EAAE,KAAK,CAAC;QACjD,MAAMF,KAAK;MACf,CAAC,CAAC;IACN,CAAC;IACD,MAAMG,sBAAsB,GAAGA,CAAA,KAAM;MACjCnB,KAAK,CAACY,YAAY,CAACC,OAAO,CAACO,KAAK,CAACd,kBAAkB,CAAC;MACpDN,KAAK,CAACY,YAAY,CAACG,QAAQ,CAACK,KAAK,CAACb,mBAAmB,CAAC;IAC1D,CAAC;IACDI,oBAAoB,CAAC,CAAC;IACtB,OAAO,SAASU,OAAOA,CAAA,EAAG;MACtBF,sBAAsB,CAAC,CAAC;IAC5B,CAAC;EACL,CAAC,CAAC;EACF,OAAOf,cAAc;AACzB,CAAC;AAACD,EAAA,CAtCWF,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}