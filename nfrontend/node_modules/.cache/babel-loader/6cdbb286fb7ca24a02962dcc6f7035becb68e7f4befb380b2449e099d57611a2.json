{"ast":null,"code":"import * as ACTIONS from './Constants';\nimport { login, signup } from '../api/apiCalls';\nexport const logoutSuccess = () => {\n  return {\n    type: ACTIONS.LOGOUT_SUCCESS\n  };\n};\nexport const loginSuccess = authState => {\n  return {\n    type: ACTIONS.LOGIN_SUCCESS,\n    payload: authState\n  };\n};\nexport const loginHandler = credentials => {\n  return async function (dispatch) {\n    const response = await login(credentials);\n    const authState = {\n      ...response.data,\n      password: credentials.password\n    };\n    dispatch(loginSuccess(authState));\n    return response;\n  };\n};\nexport const signupHandler = user => {\n  return async function (dispatch) {\n    const response = await signup(user);\n    await dispatch(loginHandler(user));\n    return response;\n  };\n};","map":{"version":3,"names":["ACTIONS","login","signup","logoutSuccess","type","LOGOUT_SUCCESS","loginSuccess","authState","LOGIN_SUCCESS","payload","loginHandler","credentials","dispatch","response","data","password","signupHandler","user"],"sources":["C:/Users/HAKYOL/Hoaxify/nfrontend/src/redux/authActions.js"],"sourcesContent":["import * as ACTIONS from './Constants';\r\nimport { login, signup } from '../api/apiCalls';\r\n\r\nexport const logoutSuccess = () => {\r\n    return {\r\n        type: ACTIONS.LOGOUT_SUCCESS\r\n    }\r\n};\r\n\r\nexport const loginSuccess = (authState) => {\r\n    return {\r\n        type: ACTIONS.LOGIN_SUCCESS,\r\n        payload: authState\r\n    }\r\n};\r\n\r\nexport const loginHandler = (credentials) => {\r\n    return async function (dispatch) {\r\n        const response = await login(credentials);\r\n        const authState = {\r\n            ...response.data,\r\n            password: credentials.password\r\n        }\r\n        dispatch(loginSuccess(authState));\r\n        return response;\r\n    }\r\n};\r\n\r\nexport const signupHandler = (user) => {\r\n    return async function (dispatch) {\r\n        const response = await signup(user);\r\n        await dispatch(loginHandler(user));\r\n        return response;\r\n    }\r\n}"],"mappings":"AAAA,OAAO,KAAKA,OAAO,MAAM,aAAa;AACtC,SAASC,KAAK,EAAEC,MAAM,QAAQ,iBAAiB;AAE/C,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC/B,OAAO;IACHC,IAAI,EAAEJ,OAAO,CAACK;EAClB,CAAC;AACL,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIC,SAAS,IAAK;EACvC,OAAO;IACHH,IAAI,EAAEJ,OAAO,CAACQ,aAAa;IAC3BC,OAAO,EAAEF;EACb,CAAC;AACL,CAAC;AAED,OAAO,MAAMG,YAAY,GAAIC,WAAW,IAAK;EACzC,OAAO,gBAAgBC,QAAQ,EAAE;IAC7B,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACU,WAAW,CAAC;IACzC,MAAMJ,SAAS,GAAG;MACd,GAAGM,QAAQ,CAACC,IAAI;MAChBC,QAAQ,EAAEJ,WAAW,CAACI;IAC1B,CAAC;IACDH,QAAQ,CAACN,YAAY,CAACC,SAAS,CAAC,CAAC;IACjC,OAAOM,QAAQ;EACnB,CAAC;AACL,CAAC;AAED,OAAO,MAAMG,aAAa,GAAIC,IAAI,IAAK;EACnC,OAAO,gBAAgBL,QAAQ,EAAE;IAC7B,MAAMC,QAAQ,GAAG,MAAMX,MAAM,CAACe,IAAI,CAAC;IACnC,MAAML,QAAQ,CAACF,YAAY,CAACO,IAAI,CAAC,CAAC;IAClC,OAAOJ,QAAQ;EACnB,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}