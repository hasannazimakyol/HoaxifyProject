{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HAKYOL\\\\nfrontend\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport './bootstrap-override.scss';\nimport App from './container/App';\nimport reportWebVitals from './reportWebVitals';\nimport './i18n';\nimport { HashRouter as Router } from 'react-router-dom';\n// import AuthenticationContext from './shared/AuthenticationContext';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loggedInState = {\n  isLoggedIn: true,\n  username: 'user1',\n  displayName: 'displayName1',\n  image: undefined,\n  password: 'P4ssword'\n};\nconst defaultState = {\n  isLoggedIn: false,\n  username: undefined,\n  displayName: undefined,\n  image: undefined,\n  password: undefined\n};\nconst reducer = (state, action) => {\n  if (action.type === 'logout-success') {\n    return defaultState;\n  }\n  return state;\n};\nconst store = createStore(reducer, loggedInState);\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(Router, {\n  children: /*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: /*#__PURE__*/_jsxDEV(Provider, {\n      store: store,\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 40,\n  columnNumber: 3\n}, this)\n// <React.StrictMode>\n//   <ApiProgress>\n//     <UserSignupPage />\n//   </ApiProgress>\n//   <LanguageSelector />\n// </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","HashRouter","Router","Provider","createStore","jsxDEV","_jsxDEV","loggedInState","isLoggedIn","username","displayName","image","undefined","password","defaultState","reducer","state","action","type","store","root","createRoot","document","getElementById","render","children","StrictMode","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/HAKYOL/nfrontend/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport './bootstrap-override.scss';\nimport App from './container/App';\nimport reportWebVitals from './reportWebVitals';\nimport './i18n';\nimport { HashRouter as Router } from 'react-router-dom';\n// import AuthenticationContext from './shared/AuthenticationContext';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nconst loggedInState = {\n  isLoggedIn: true,\n  username: 'user1',\n  displayName: 'displayName1',\n  image: undefined,\n  password: 'P4ssword'\n}\n\nconst defaultState = {\n  isLoggedIn: false,\n  username: undefined,\n  displayName: undefined,\n  image: undefined,\n  password: undefined\n}\n\nconst reducer = (state, action) => {\n  if(action.type === 'logout-success'){\n    return defaultState;\n  }\n  return state;\n}\n\nconst store = createStore(reducer, loggedInState);\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <Router>\n    <React.StrictMode>\n      {/* <AuthenticationContext> */}\n      <Provider store={store}>\n        <App />\n      </Provider>\n      {/* </AuthenticationContext> */}\n    </React.StrictMode>\n  </Router>\n  // <React.StrictMode>\n  //   <ApiProgress>\n  //     <UserSignupPage />\n  //   </ApiProgress>\n  //   <LanguageSelector />\n  // </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAO,2BAA2B;AAClC,OAAOC,GAAG,MAAM,iBAAiB;AACjC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAO,QAAQ;AACf,SAASC,UAAU,IAAIC,MAAM,QAAQ,kBAAkB;AACvD;AACA,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,WAAW,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,aAAa,GAAG;EACpBC,UAAU,EAAE,IAAI;EAChBC,QAAQ,EAAE,OAAO;EACjBC,WAAW,EAAE,cAAc;EAC3BC,KAAK,EAAEC,SAAS;EAChBC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,YAAY,GAAG;EACnBN,UAAU,EAAE,KAAK;EACjBC,QAAQ,EAAEG,SAAS;EACnBF,WAAW,EAAEE,SAAS;EACtBD,KAAK,EAAEC,SAAS;EAChBC,QAAQ,EAAED;AACZ,CAAC;AAED,MAAMG,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACjC,IAAGA,MAAM,CAACC,IAAI,KAAK,gBAAgB,EAAC;IAClC,OAAOJ,YAAY;EACrB;EACA,OAAOE,KAAK;AACd,CAAC;AAED,MAAMG,KAAK,GAAGf,WAAW,CAACW,OAAO,EAAER,aAAa,CAAC;AAEjD,MAAMa,IAAI,GAAGtB,QAAQ,CAACuB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACTlB,OAAA,CAACJ,MAAM;EAAAuB,QAAA,eACLnB,OAAA,CAACT,KAAK,CAAC6B,UAAU;IAAAD,QAAA,eAEfnB,OAAA,CAACH,QAAQ;MAACgB,KAAK,EAAEA,KAAM;MAAAM,QAAA,eACrBnB,OAAA,CAACP,GAAG;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACb;AACR;AACA;AACA;AACA;AACA;AACA;AACF,CAAC;;AAED;AACA;AACA;AACA9B,eAAe,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}