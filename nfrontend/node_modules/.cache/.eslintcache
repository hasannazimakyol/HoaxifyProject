[{"C:\\Users\\HAKYOL\\nfrontend\\src\\index.js":"1","C:\\Users\\HAKYOL\\nfrontend\\src\\reportWebVitals.js":"2","C:\\Users\\HAKYOL\\nfrontend\\src\\pages\\UserSignupPage.js":"3","C:\\Users\\HAKYOL\\nfrontend\\src\\api\\apiCalls.js":"4","C:\\Users\\HAKYOL\\nfrontend\\src\\components\\Input.js":"5","C:\\Users\\HAKYOL\\nfrontend\\src\\i18n.js":"6","C:\\Users\\HAKYOL\\nfrontend\\src\\pages\\LoginPage.js":"7","C:\\Users\\HAKYOL\\nfrontend\\src\\components\\LanguageSelector.js":"8","C:\\Users\\HAKYOL\\nfrontend\\src\\shared\\ApiProgress.js":"9","C:\\Users\\HAKYOL\\nfrontend\\src\\components\\ButtonWithProgress.js":"10","C:\\Users\\HAKYOL\\nfrontend\\src\\container\\App.js":"11","C:\\Users\\HAKYOL\\nfrontend\\src\\pages\\HomePage.js":"12","C:\\Users\\HAKYOL\\nfrontend\\src\\pages\\UserPage.js":"13","C:\\Users\\HAKYOL\\nfrontend\\src\\components\\TopBar.js":"14","C:\\Users\\HAKYOL\\nfrontend\\src\\components\\ProfileCard.js":"15","C:\\Users\\HAKYOL\\nfrontend\\src\\redux\\configureStore.js":"16","C:\\Users\\HAKYOL\\nfrontend\\src\\redux\\authReducer.js":"17","C:\\Users\\HAKYOL\\nfrontend\\src\\redux\\authActions.js":"18","C:\\Users\\HAKYOL\\nfrontend\\src\\redux\\Constants.js":"19","C:\\Users\\HAKYOL\\nfrontend\\src\\components\\UserList.js":"20","C:\\Users\\HAKYOL\\nfrontend\\src\\components\\UserListItem.js":"21","C:\\Users\\HAKYOL\\nfrontend\\src\\components\\ProfileImageWithDefault.js":"22","C:\\Users\\HAKYOL\\nfrontend\\src\\components\\Spinner.js":"23","C:\\Users\\HAKYOL\\nfrontend\\src\\components\\HoaxSubmit.js":"24","C:\\Users\\HAKYOL\\nfrontend\\src\\components\\HoaxFeed.js":"25","C:\\Users\\HAKYOL\\nfrontend\\src\\components\\HoaxView.js":"26","C:\\Users\\HAKYOL\\nfrontend\\src\\components\\AutoUploadImage.js":"27","C:\\Users\\HAKYOL\\nfrontend\\src\\components\\Modal.js":"28"},{"size":1025,"mtime":1694420340288,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":1691848450664,"results":"31","hashOfConfig":"30"},{"size":4313,"mtime":1694258089463,"results":"32","hashOfConfig":"30"},{"size":2346,"mtime":1694720974908,"results":"33","hashOfConfig":"30"},{"size":622,"mtime":1694262393047,"results":"34","hashOfConfig":"30"},{"size":2762,"mtime":1694611300003,"results":"35","hashOfConfig":"30"},{"size":2150,"mtime":1694090140742,"results":"36","hashOfConfig":"30"},{"size":803,"mtime":1693323843174,"results":"37","hashOfConfig":"30"},{"size":2127,"mtime":1694442221500,"results":"38","hashOfConfig":"30"},{"size":503,"mtime":1694092756730,"results":"39","hashOfConfig":"30"},{"size":1070,"mtime":1693323983352,"results":"40","hashOfConfig":"30"},{"size":877,"mtime":1694414777536,"results":"41","hashOfConfig":"30"},{"size":2012,"mtime":1694436340825,"results":"42","hashOfConfig":"30"},{"size":3761,"mtime":1694341772272,"results":"43","hashOfConfig":"30"},{"size":7919,"mtime":1694621995081,"results":"44","hashOfConfig":"30"},{"size":1267,"mtime":1694341563664,"results":"45","hashOfConfig":"30"},{"size":689,"mtime":1694339820943,"results":"46","hashOfConfig":"30"},{"size":1267,"mtime":1694721380402,"results":"47","hashOfConfig":"30"},{"size":143,"mtime":1694339594981,"results":"48","hashOfConfig":"30"},{"size":2638,"mtime":1694341953015,"results":"49","hashOfConfig":"30"},{"size":640,"mtime":1693922299067,"results":"50","hashOfConfig":"30"},{"size":530,"mtime":1694593411928,"results":"51","hashOfConfig":"30"},{"size":310,"mtime":1693923795250,"results":"52","hashOfConfig":"30"},{"size":4279,"mtime":1694557845825,"results":"53","hashOfConfig":"30"},{"size":4701,"mtime":1694596267063,"results":"54","hashOfConfig":"30"},{"size":3361,"mtime":1694611977435,"results":"55","hashOfConfig":"30"},{"size":672,"mtime":1694523619459,"results":"56","hashOfConfig":"30"},{"size":1605,"mtime":1694612015247,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"1y9xusg",{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"61"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\HAKYOL\\nfrontend\\src\\index.js",[],[],[],"C:\\Users\\HAKYOL\\nfrontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\HAKYOL\\nfrontend\\src\\pages\\UserSignupPage.js",[],[],"C:\\Users\\HAKYOL\\nfrontend\\src\\api\\apiCalls.js",[],[],"C:\\Users\\HAKYOL\\nfrontend\\src\\components\\Input.js",[],[],"C:\\Users\\HAKYOL\\nfrontend\\src\\i18n.js",[],[],"C:\\Users\\HAKYOL\\nfrontend\\src\\pages\\LoginPage.js",[],[],"C:\\Users\\HAKYOL\\nfrontend\\src\\components\\LanguageSelector.js",[],[],"C:\\Users\\HAKYOL\\nfrontend\\src\\shared\\ApiProgress.js",[],[],"C:\\Users\\HAKYOL\\nfrontend\\src\\components\\ButtonWithProgress.js",[],[],"C:\\Users\\HAKYOL\\nfrontend\\src\\container\\App.js",["145"],[],"import React from 'react';\nimport LanguageSelector from '../components/LanguageSelector'\nimport UserSignupPage from '../pages/UserSignupPage';\nimport LoginPage from '../pages/LoginPage';\nimport HomePage from '../pages/HomePage';\nimport UserPage from '../pages/UserPage';\nimport { HashRouter as Router, Route, Redirect, Switch } from 'react-router-dom'\nimport TopBar from '../components/TopBar';\nimport { useSelector } from 'react-redux';\n\nconst App = () => {\n  const { isLoggedIn } = useSelector((store) => ({\n    isLoggedIn: store.isLoggedIn\n  }));\n  return (\n    <div>\n      {/* <Router> */}\n      <TopBar />\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        {!isLoggedIn && (<Route path=\"/login\" component={LoginPage} />)}\n        {/* <Route path=\"/login\" component={LoginPage} /> */}\n        <Route path=\"/signup\" component={UserSignupPage} />\n        <Route path=\"/user/:username\" component={UserPage} />\n        <Redirect to=\"/\" />\n      </Switch>\n      {/* </Router> */}\n      <LanguageSelector />\n    </div>\n  );\n}\nexport default App;\n","C:\\Users\\HAKYOL\\nfrontend\\src\\pages\\HomePage.js",[],[],"C:\\Users\\HAKYOL\\nfrontend\\src\\pages\\UserPage.js",[],[],"C:\\Users\\HAKYOL\\nfrontend\\src\\components\\TopBar.js",[],[],"C:\\Users\\HAKYOL\\nfrontend\\src\\components\\ProfileCard.js",["146"],[],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Input from './Input';\r\nimport { deleteUser, updateUser } from '../api/apiCalls';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport ButtonWithProgress from './ButtonWithProgress';\r\nimport { logoutSuccess, updateSuccess } from '../redux/authActions';\r\nimport Modal from './Modal';\r\n\r\nconst ProfileCard = (props) => {\r\n\r\n    const [inEditMode, setInEditMode] = useState(false);\r\n    const [updatedDisplayName, setUpdatedDisplayName] = useState();\r\n    const { username: loggedInUsername } = useSelector((store) => ({ username: store.username }));\r\n    const routeParams = useParams();\r\n    const pathUsername = routeParams.username;\r\n    const [user, setUser] = useState({});\r\n    const [editable, setEditable] = useState(false);\r\n    const [newImage, setNewImage] = useState();\r\n    const [validationErrors, setValidationErrors] = useState({});\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        setUser(props.user);\r\n    }, [props.user]);\r\n\r\n    useEffect(() => {\r\n        setEditable(pathUsername === loggedInUsername);\r\n    }, [pathUsername, loggedInUsername]);\r\n\r\n    useEffect(() => {\r\n        setValidationErrors((previousValidationErrors) => {\r\n            return {\r\n                ...previousValidationErrors,\r\n                displayName: undefined\r\n            }\r\n        });\r\n    }, [updatedDisplayName]);\r\n\r\n    useEffect(() => {\r\n        setValidationErrors((previousValidationErrors) => {\r\n            return {\r\n                ...previousValidationErrors,\r\n                image: undefined\r\n            }\r\n        });\r\n    }, [newImage]);\r\n\r\n    const { t } = useTranslation();\r\n    // const pathUsername = props.match.params.username;\r\n    // const { user } = props;\r\n    const { username, displayName, image } = user;\r\n\r\n    useEffect(() => {\r\n        if (!inEditMode) {\r\n            setUpdatedDisplayName(undefined);\r\n            setNewImage(undefined);\r\n        } else {\r\n            setUpdatedDisplayName(displayName);\r\n        }\r\n    }, [inEditMode, displayName]);\r\n\r\n    const onClickSave = async () => {\r\n\r\n        let image;\r\n        if (newImage) {\r\n            image = newImage.split(',')[1];\r\n        }\r\n\r\n        const body = {\r\n            displayName: updatedDisplayName,\r\n            image\r\n        };\r\n\r\n        try {\r\n            const response = await updateUser(username, body);\r\n            setInEditMode(false);\r\n            setUser(response.data);\r\n            dispatch(updateSuccess(response.data));\r\n        } catch (error) {\r\n            if (error.response.data.validationErrors) {\r\n                setValidationErrors(error.response.data.validationErrors);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const onChangeFile = (event) => {\r\n        if (event.target.files.length < 1) {\r\n            return;\r\n        }\r\n        const file = event.target.files[0];\r\n        const fileReader = new FileReader();\r\n        fileReader.onloadend = () => {\r\n            setNewImage(fileReader.result);\r\n        }\r\n        fileReader.readAsDataURL(file);\r\n    };\r\n\r\n    const onClickDeleteUser = async () => {\r\n        try {\r\n            const response = await deleteUser(username);\r\n            setModalVisible(false);\r\n            dispatch(logoutSuccess());\r\n            history.push('/');\r\n        } catch (error) {}\r\n    };\r\n\r\n    const onClickCancel = () => {\r\n        setModalVisible(false);\r\n    };\r\n\r\n    const pendingApiCall = useApiProgress('put', '/api/1.0/users/' + username);\r\n    const pendingApiCallDeleteUser = useApiProgress('delete', '/api/1.0/users/' + username, true);\r\n\r\n    const { displayName: displayNameError, image: imageError } = validationErrors;\r\n\r\n    return (\r\n        <>\r\n            <div className='card text-center'>\r\n                <div className='card-header'>\r\n                    <ProfileImageWithDefault className='rounded-circle shadow' width='200' height='200'\r\n                        alt={`${username} profile`} image={image} tempimage={newImage} />\r\n                </div>\r\n                <div className='card-body'>\r\n                    {!inEditMode &&\r\n                        // div ya da aç kapa yaparak react fragment kullanılır\r\n                        (<>\r\n                            <h3>{displayName}@{username}</h3>\r\n                            {editable &&\r\n                                (<>\r\n                                    <button className='btn btn-success d-inline-flex' onClick={() => setInEditMode(true)}>\r\n                                        <span className=\"material-symbols-outlined pr-2\">edit</span>\r\n                                        {t('Edit')}\r\n                                    </button>\r\n                                    <div className='pt-2'>\r\n                                        <button className='btn btn-danger d-inline-flex' onClick={() => setModalVisible(true)}>\r\n                                            <span className=\"material-symbols-outlined pr-2\">person_remove</span>\r\n                                            {t('DeleteMyAccount')}\r\n                                        </button>\r\n                                    </div>\r\n                                </>)\r\n                            }\r\n                        </>)\r\n                    }\r\n                    {inEditMode && (\r\n                        <div>\r\n                            <Input label={t('ChangeDisplayName')} defaultValue={displayName}\r\n                                error={displayNameError}\r\n                                onChange={event => {\r\n                                    setUpdatedDisplayName(event.target.value);\r\n                                }}>\r\n                            </Input>\r\n                            <Input type='file' onChange={onChangeFile} error={imageError} />\r\n                            {/* <div className=\"container\"> */}\r\n                            <ButtonWithProgress className='btn btn-primary d-inline-flex m-2' onClick={onClickSave}\r\n                                disabled={pendingApiCall} pendingApiCall={pendingApiCall}\r\n                                text={<>\r\n                                    <span className=\"material-symbols-outlined pr-2\">save</span>\r\n                                    {t('Save')}\r\n                                </>}>\r\n                            </ButtonWithProgress>\r\n                            <button className='btn btn-primary d-inline-flex m-2'\r\n                                onClick={() => setInEditMode(false)}\r\n                                disabled={pendingApiCall}>\r\n                                <span className=\"material-symbols-outlined pr-2\">backspace</span>\r\n                                {t('Cancel')}\r\n                            </button>\r\n                            {/* </div> */}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                <Modal\r\n                    visible={modalVisible}\r\n                    onClickCancel={onClickCancel}\r\n                    onClickOk={onClickDeleteUser}\r\n                    pendingApiCall={pendingApiCallDeleteUser}\r\n                    title={t('DeleteMyAccount')}\r\n                    okButton={t('DeleteMyAccount')}\r\n                    message={\r\n                        <div>\r\n                            <div>\r\n                                <strong>{t('AreYouSureToDeleteProfile')}</strong>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProfileCard;","C:\\Users\\HAKYOL\\nfrontend\\src\\redux\\configureStore.js",[],[],"C:\\Users\\HAKYOL\\nfrontend\\src\\redux\\authReducer.js",[],[],"C:\\Users\\HAKYOL\\nfrontend\\src\\redux\\authActions.js",[],[],"C:\\Users\\HAKYOL\\nfrontend\\src\\redux\\Constants.js",[],[],"C:\\Users\\HAKYOL\\nfrontend\\src\\components\\UserList.js",[],[],"C:\\Users\\HAKYOL\\nfrontend\\src\\components\\UserListItem.js",[],[],"C:\\Users\\HAKYOL\\nfrontend\\src\\components\\ProfileImageWithDefault.js",[],[],"C:\\Users\\HAKYOL\\nfrontend\\src\\components\\Spinner.js",[],[],"C:\\Users\\HAKYOL\\nfrontend\\src\\components\\HoaxSubmit.js",[],[],"C:\\Users\\HAKYOL\\nfrontend\\src\\components\\HoaxFeed.js",[],[],"C:\\Users\\HAKYOL\\nfrontend\\src\\components\\HoaxView.js",[],[],"C:\\Users\\HAKYOL\\nfrontend\\src\\components\\AutoUploadImage.js",[],[],"C:\\Users\\HAKYOL\\nfrontend\\src\\components\\Modal.js",[],[],{"ruleId":"147","severity":1,"message":"148","line":7,"column":24,"nodeType":"149","messageId":"150","endLine":7,"endColumn":30},{"ruleId":"147","severity":1,"message":"151","line":107,"column":19,"nodeType":"149","messageId":"150","endLine":107,"endColumn":27},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'response' is assigned a value but never used."]